<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.y3lq.blog.system.mapper.ArticleLikeMapper">

    <resultMap type="cn.y3lq.blog.system.entity.ArticleLikeEntity" id="articleLikeEntityMap">
        <result property="likeId" column="like_id"/>
        <result property="articleId" column="article_id"/>
        <result property="userId" column="user_id"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <insert id="insertArticleLike">
        INSERT INTO `article_like` (article_id, user_id, create_time)
        VALUES
        <foreach collection="addArticleLikeEntities" item="articleLike" separator=",">
            (#{articleLike.articleId},#{articleLike.userId},sysdate())
        </foreach>
        ON DUPLICATE KEY UPDATE
        article_id=VALUES(article_id),user_id=VALUES(user_id)
    </insert>

    <delete id="deleteArticleLike" >
        DELETE FROM `article_like` WHERE
        <foreach collection="removeArticleLikeEntities" item="articleLike" separator="OR">
            (article_id = #{articleLike.articleId} AND user_id = #{articleLike.userId})
        </foreach>
    </delete>

    <select id="selectRecord" resultMap="articleLikeEntityMap">
        SELECT like_id, article_id, user_id, create_time
        FROM `article_like`
        WHERE article_id = #{articleId}
          AND user_id = #{userId}
    </select>

    <select id="countLikeNum" resultType="int">
        SELECT COUNT(article_id) FROM `article_like` WHERE article_id = #{articleId}
    </select>



</mapper>